apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: unity-<ARRAY_ID>-fc
provisioner: csi-unity.dellemc.com
reclaimPolicy: Retain
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
parameters:
  protocol: FC
  arrayId: <ARRAY_ID>
  storagePool: <STORAGE_POOL>
  thinProvisioned: "true"
  isDataReductionEnabled: "true"
  #TieringPolicy - Tiering policy to be used during provisioning
  #                Requires FAST VP license.
  # Allowed values: String
  # Optional: true
  # Examples: "0"
  # Default value: None
  # Accepted values:
  #   "0" for "Start High Then Auto-Tier"
  #   "1" for "Auto-Tier"
  #   "2" for "Highest Available Tier"
  #   "3" for "Lowest Available Tier"
  tieringPolicy: <TIERING_POLICY>
  # hostIOLimitName - Insert Host IO Limit Name that is to be used for provisioning here.
  # Allowed values: String
  # Optional: true
  # Default value: None
  # Examples: "Autotier"
  hostIOLimitName: <HOST_IO_LIMIT_NAME>
  # csi.storage.k8s.io/fstype - Set the filesystem type to format the new volume
  # Default value: ext4
  # Accepted values:
  #   "ext4"
  #   "xfs"
  csi.storage.k8s.io/fstype: xfs
# Restrict provisioning to specific topologies
# Allowed values: map of key-value pairs
# Optional: false
# Default value: None
# Examples: "apm0020280XXXX" , "apm0021340XXXX"
# Here first three characters  should be in small letters.
allowedTopologies:
  - matchLabelExpressions:
      - key: csi-unity.dellemc.com/<array_id>-fc
        values:
          - "true"
# mountOptions - Defines mount input values.
# Default value: []
# Optional: false
# Examples:
#   "hard"    - option for mounting with NFS
#   "context" - option for mounting with block storage
mountOptions: ["<mountOption1>", "<mountOption2>", ..., "<mountOptionN>"]
